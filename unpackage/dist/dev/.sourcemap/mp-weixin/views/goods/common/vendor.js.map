{"version":3,"sources":["uni-app:///uni_modules/fan-canvas/canvasUtils.js","uni-app:///uni_modules/fan-canvas/plugins/utils.js","uni-app:///uni_modules/fan-canvas/plugins/qrcode.js"],"names":["fillRoundRect","cxt","x","y","width","height","radius","fillColor","console","log","save","translate","drawRoundRectPath","fillStyle","fill","restore","beginPath","arc","Math","PI","lineTo","closePath","roundRectBorder","w","h","r","borderWidth","moveTo","arcTo","lineWidth","getImageInfo","image","Promise","req","rj","uni","src","success","res","drawCircular","ctx","url","avatarurl_width","avatarurl_heigth","avatarurl_x","avatarurl_y","clip","drawImage","drawImgCover","t","e","s","o","i","a","n","ceil","path","c","l","dealWords","options","callback","font","allRow","getLineNum","word","maxWidth","count","maxLine","endPos","j","length","nowStr","slice","rowWid","measureText","m","isBlock","num","jy","test","fillText","textCenter","cvsW","l_h","str","lineNum","drawButton","color","text","fontColor","textAlign","setTextAlign","textBaseline","settingWritePhotosAlbum","saveImg","getSetting","authSetting","showLoading","title","downloadFile","data","statusCode","saveImageToPhotosAlbum","filePath","hideLoading","showToast","fail","tip","errMsg","icon","showModal","content","confirmText","cancelText","confirm","openSetting","authorize","scope","tempFilePath","qrcodeCanvas","id","code","that","qrcode","api","draw","createCanvasContext","convert_length","round","getSystemInfoSync","windowWidth","QR","adelta","vpat","fmtword","eccblocks","glog","gexp","strinbuf","eccbuf","qrframe","framask","rlens","version","neccblk1","neccblk2","datablkw","eccblkwid","ecclevel","setmask","bt","putalign","modnn","genpoly","appendrs","dlen","ecbuf","eclen","fb","ismasked","applymask","r3x","r3y","N1","N2","N3","N4","badruns","runsbad","badcheck","b","b1","thisbad","bw","big","genframe","instring","k","v","charCodeAt","_canvas","_size","val","size","canvas","el","getFrame","string","ecc","warn","min","frame","px","roundedSize","offset","floor","clearRect","setFillStyle","fillRect","module","exports"],"mappings":"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","file":"views/goods/common/vendor.js","sourcesContent":["/**\r\n * 绘制矩形\r\n * 参数：cxt、x坐标、y坐标、宽度、高度、圆角、颜色\r\n */\r\nfunction fillRoundRect(cxt, x, y, width, height, radius, fillColor) {\r\n    console.log(cxt,'fillRoundRect')\r\n    //圆的直径必然要小于矩形的宽高\r\n    if (2 * radius > width || 2 * radius > height) {\r\n        return false;\r\n    }\r\n    cxt.save();\r\n    cxt.translate(x, y);\r\n    //绘制圆角矩形的各个边\r\n    drawRoundRectPath(cxt, width, height, radius);\r\n    cxt.fillStyle = fillColor || '#000'; //若是给定了值就用给定的值否则给予默认值\r\n    cxt.fill();\r\n    cxt.restore();\r\n}\r\n// 绘制矩形各个边过程\r\nfunction drawRoundRectPath(cxt, width, height, radius) {\r\n    cxt.beginPath(0);\r\n    //从右下角顺时针绘制，弧度从0到1/2PI\r\n    cxt.arc(width - radius, height - radius, radius, 0, Math.PI / 2);\r\n    //矩形下边线\r\n    cxt.lineTo(radius, height);\r\n    //左下角圆弧，弧度从1/2PI到PI\r\n    cxt.arc(radius, height - radius, radius, Math.PI / 2, Math.PI);\r\n    //矩形左边线\r\n    cxt.lineTo(0, radius);\r\n    //左上角圆弧，弧度从PI到3/2PI\r\n    cxt.arc(radius, radius, radius, Math.PI, (Math.PI * 3) / 2);\r\n    //上边线\r\n    cxt.lineTo(width - radius, 0);\r\n    //右上角圆弧\r\n    cxt.arc(width - radius, radius, radius, (Math.PI * 3) / 2, Math.PI * 2);\r\n    //右边线\r\n    cxt.lineTo(width, height - radius);\r\n    cxt.closePath();\r\n}\r\n/**\r\n * 绘制矩形边框\r\n * 参数：cxt、x坐标、y坐标、宽度、高度、圆角、border颜色\r\n */\r\nfunction roundRectBorder(cxt, x, y, w, h, r,borderWidth) {\r\n    if (w < 2 * r) r = w / 2;\r\n    if (h < 2 * r) r = h / 2;\r\n    cxt.beginPath();\r\n    cxt.moveTo(x+r, y);\r\n    cxt.arcTo(x+w, y, x+w, y+h, r);\r\n    cxt.arcTo(x+w, y+h, x, y+h, r);\r\n    cxt.arcTo(x, y+h, x, y, r);\r\n    cxt.arcTo(x, y, x+w, y, r);\r\n    cxt.closePath();\r\n    cxt.lineWidth = borderWidth\r\n}\r\n//加载图片\r\nfunction getImageInfo(image) {\r\n    return new Promise((req, rj) => {\r\n\r\n        uni.getImageInfo({\r\n            src: image,\r\n            success: function(res) {\r\n                req(res)\r\n            },\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    })\r\n}\r\n\r\n/**\r\n * 绘制圆形头像\r\n * 参数：cxt、图标路径path、x坐标、y坐标、宽度、高度\r\n */\r\nfunction drawCircular(ctx, url, x, y, width, height) {\r\n    //画圆形头像\r\n    var avatarurl_width = width;\r\n    var avatarurl_heigth = height;\r\n    var avatarurl_x = x;\r\n    var avatarurl_y = y;\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.arc(avatarurl_width / 2 + avatarurl_x, avatarurl_heigth / 2 + avatarurl_y, avatarurl_width / 2, 0, Math.PI * 2, false);\r\n    ctx.clip();\r\n    ctx.drawImage(url, avatarurl_x, avatarurl_y, avatarurl_width, avatarurl_heigth);\r\n    ctx.restore();\r\n}\r\n\r\n/*\r\n * 绘制图片cover\r\n * t:cxt;\r\n * e:图片属性（通过getImageInfo获取）\r\n * s:x坐标\r\n * o:y坐标\r\n * i:绘制图片宽度\r\n * a:绘制图片高度\r\n */\r\nfunction drawImgCover(t, e, s, o, i, a) {\r\n    console.log(e,'drawImgCover')\r\n    if (e.width / e.height >= i / a) {\r\n        var r = e.height,\r\n            n = Math.ceil(i / a * r);\r\n        t.drawImage(e.path, (e.width - n) / 2, 0, n, e.height, s, o, i, a)\r\n    } else {\r\n        var c = e.width,\r\n            l = Math.ceil(a / i * c);\r\n        t.drawImage(e.path, 0, (e.height - l) / 2, e.width, l, s, o, i, a)\r\n    }\r\n}\r\n\r\n/*\r\n * 文本自定义换行 -- 只适用于中文（淘汰）\r\n * family = \" 'PingFang SC',tahoma,arial,'helvetica neue','hiragino sans gb','microsoft yahei',sans-serif\";\r\n * var options = {\r\n\t\t\t\tfont:\"22px\" + family,  字体大小\r\n\t\t\t\tctx:ctx,          uni.createCanvasContext('firstCanvas')\r\n\t\t\t\tword:\"文字\",      文字\r\n\t\t\t\tmaxWidth:750,     最大宽度\r\n\t\t\t\tmaxLine:2,        最大行数\r\n\t\t\t\tx:100,            x坐标\r\n\t\t\t\ty:100,            y坐标\r\n\t\t\t\tl_h:40            行高\r\n\t\t\t}\r\n * callback 自定义函数\r\n */\r\n// function dealWords(options, callback) {\r\n//     options.ctx.font = options.font; //设置字体\r\n//     callback && callback();\r\n//     var allRow = Math.ceil(options.ctx.measureText(options.word).width / options.maxWidth); //实际总共能分多少行\r\n//     var count = allRow >= options.maxLine ? options.maxLine : allRow; //实际能分多少行与设置的最大显示行数比，谁小就用谁做循环次数\r\n\r\n//     var endPos = 0; //当前字符串的截断点\r\n//     for (var j = 0; j < count; j++) {\r\n//         var nowStr = options.word.slice(endPos); //当前剩余的字符串\r\n//         var rowWid = 0; //每一行当前宽度    \r\n//         if (options.ctx.measureText(nowStr).width > options.maxWidth) { //如果当前的字符串宽度大于最大宽度，然后开始截取\r\n//             for (var m = 0; m < nowStr.length; m++) {\r\n//                 rowWid += options.ctx.measureText(nowStr[m]).width; //当前字符串总宽度\r\n//                 if (rowWid > options.maxWidth) {\r\n//                     if (j === options.maxLine - 1) { //如果是最后一行\r\n//                         options.ctx.fillText(nowStr.slice(0, m - 1) + '...', options.x, options.y + (j + 1) * options.l_h); //(j+1)*18这是每一行的高度        \r\n//                     } else {\r\n//                         options.ctx.fillText(nowStr.slice(0, m), options.x, options.y + (j + 1) * options.l_h);\r\n//                     }\r\n//                     endPos += m; //下次截断点\r\n//                     break;\r\n//                 }\r\n//             }\r\n//         } else { //如果当前的字符串宽度小于最大宽度就直接输出\r\n//             options.ctx.fillText(nowStr.slice(0), options.x, options.y + (j + 1) * options.l_h);\r\n//         }\r\n//     }\r\n// }\r\n\r\n/*\r\n * 文本自定义换行---已适配英文不截断换行（2022.7.22更新）\r\n * family = \" 'PingFang SC',tahoma,arial,'helvetica neue','hiragino sans gb','microsoft yahei',sans-serif\";\r\n * var options = {\r\n\t\t\t\tfont:\"22px\" + family,  字体大小\r\n\t\t\t\tctx:ctx,          uni.createCanvasContext('firstCanvas')\r\n\t\t\t\tword:\"文字\",      文字\r\n\t\t\t\tmaxWidth:750,     最大宽度\r\n\t\t\t\tmaxLine:2,        最大行数\r\n\t\t\t\tx:100,            x坐标\r\n\t\t\t\ty:100,            y坐标\r\n\t\t\t\tl_h:40,           行高\r\n\t\t\t\ttextCenter:false, 是否居中\r\n\t\t\t\tcvsW:cvsW,        画布总宽--用于计算文字居中\r\n\t\t\t}\r\n * callback 自定义函数\r\n */\r\nfunction dealWords(options, callback) {\r\n    options.ctx.font = options.font; //设置字体\r\n    callback && callback();\r\n\tvar allRow = getLineNum(options.ctx,options.word,options.maxWidth)\r\n    // var allRow = Math.ceil(options.ctx.measureText(options.word).width / options.maxWidth)+1; //实际总共能分多少行--默认多加一行，预留有英文截断\r\n    var count = allRow >= options.maxLine ? options.maxLine : allRow; //实际能分多少行与设置的最大显示行数比，谁小就用谁做循环次数\r\n    var endPos = 0; //当前字符串的截断点\r\n    for (var j = 0; j < count; j++) {\r\n\t\tif(endPos>=options.word.length){\r\n\t\t\tbreak;\r\n\t\t}\r\n        var nowStr = options.word.slice(endPos); //当前剩余的字符串\r\n        var rowWid = 0; //每一行当前宽度    \r\n        if (options.ctx.measureText(nowStr).width > options.maxWidth) { //如果当前的字符串宽度大于最大宽度，然后开始截取\r\n            for (var m = 0; m < nowStr.length; m++) {\r\n                rowWid += options.ctx.measureText(nowStr[m]).width; //当前字符串总宽度\r\n                if (rowWid > options.maxWidth) {\r\n                    endPos += m; //下次截断点\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar isBlock = false //是否被截断了\r\n\t\t\t\t\tvar num = 1 //前几位数是空'',判断从这个点换行\r\n\t\t\t\t\t// 判断最后一个是否字母--判断是否截断了英文\r\n\t\t\t\t\tvar jy = /^[a-zA-Z]*$/\r\n\t\t\t\t\tif(jy.test(nowStr[m-1])){\r\n\t\t\t\t\t\tconsole.log(m-1,nowStr[m-1],'最后一个是字母')\r\n\t\t\t\t\t\tfor (var n = 1; n < (m-1); n++) {\r\n\t\t\t\t\t\t\tif(!jy.test(nowStr[m-1-n])){\r\n\t\t\t\t\t\t\t\tconsole.log(m-1-n,nowStr[m-1-n],num,endPos,'这个位置是空字符')\r\n\t\t\t\t\t\t\t\tendPos = endPos-num\r\n\t\t\t\t\t\t\t\tisBlock = true\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tnum++\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (j === options.maxLine - 1) { //如果是最后一行\r\n\t\t\t\t\t\toptions.ctx.fillText(nowStr.slice(0, m - 1) + '...', options.textCenter?(options.cvsW-options.ctx.measureText(nowStr.slice(0, m - 1)).width)/2:options.x, options.y + (j + 1) * options.l_h); //(j+1)*18这是每一行的高度 \r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t    options.ctx.fillText(nowStr.slice(0, isBlock?(m - num):m), options.textCenter?(options.cvsW-options.ctx.measureText(nowStr.slice(0, isBlock?(m - num):m)).width)/2:options.x, options.y + (j + 1) * options.l_h);\r\n\t\t\t\t\t}\r\n                    break;\r\n                }\r\n            }\r\n        } else { //如果当前的字符串宽度小于最大宽度就直接输出\r\n            options.ctx.fillText(nowStr.slice(0), options.textCenter?(options.cvsW-options.ctx.measureText(nowStr.slice(0)).width)/2:options.x, options.y + (j + 1) * options.l_h);\r\n        }\r\n    }\r\n}\r\n\r\n/*\r\n * 计算文字有几行--针对英文换行不截断的计算行数\r\n * ctx:cxt;\r\n * str:文案内容\r\n * maxWidth:文字最大宽度\r\n */\r\nfunction getLineNum(ctx,str,maxWidth){\r\n\tvar allRow = Math.ceil(ctx.measureText(str).width / maxWidth)+1; //实际总共能分多少行--默认多加一行，预留有英文截断\r\n\tvar endPos = 0; //当前字符串的截断点\r\n\tvar lineNum = 0 //行数\r\n\tfor (var j = 0; j < allRow; j++) {\r\n\t    var nowStr = str.slice(endPos); //当前剩余的字符串\r\n\t    var rowWid = 0; //每一行当前宽度    \r\n\t    if (ctx.measureText(nowStr).width > maxWidth) { //如果当前的字符串宽度大于最大宽度，然后开始截取\r\n\t        for (var m = 0; m < nowStr.length; m++) {\r\n\t            rowWid += ctx.measureText(nowStr[m]).width; //当前字符串总宽度\r\n\t            if (rowWid > maxWidth) {\r\n\t                endPos += m; //下次截断点\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar isBlock = false //是否被截断了\r\n\t\t\t\t\tvar num = 1 //前几位数是空'',判断从这个点换行\r\n\t\t\t\t\t// 判断最后一个是否字母--判断是否截断了英文\r\n\t\t\t\t\tvar jy = /^[a-zA-Z]*$/\r\n\t\t\t\t\tif(jy.test(nowStr[m-1])){\r\n\t\t\t\t\t\tconsole.log(m-1,nowStr[m-1],'最后一个是字母')\r\n\t\t\t\t\t\tfor (var n = 1; n < (m-1); n++) {\r\n\t\t\t\t\t\t\tif(!jy.test(nowStr[m-1-n])){\r\n\t\t\t\t\t\t\t\tconsole.log(m-1-n,nowStr[m-1-n],num,endPos,'这个位置是空字符')\r\n\t\t\t\t\t\t\t\tendPos = endPos-num\r\n\t\t\t\t\t\t\t\tisBlock = true\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tnum++\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t    } else {\r\n\t\t\tlineNum = j+1\r\n\t\t\tconsole.log(nowStr.slice(0),lineNum,j,'最后一行')\r\n\t        break;\r\n\t    }\r\n\t}\r\n\tconsole.log(lineNum,'总行数')\r\n\treturn lineNum\r\n}\r\n\r\n\r\n/*\r\n * 绘制圆角按钮\r\n * ctx:createCanvasContext\r\n * color:背景颜色;\r\n * x:x坐标\r\n * y:y坐标\r\n * width:宽\r\n * height:高\r\n * radius:圆角\r\n * text:文字\r\n * fontColor:文字颜色\r\n * textAlign: left/center/right\r\n */\r\nfunction drawButton(ctx, color, x, y, width, height, radius, text, fontColor, textAlign) { \r\n    //分为4条直线4个圆角绘制\r\n    ctx.beginPath();\r\n    ctx.fillStyle = color;\r\n    ctx.moveTo(x + radius, y);\r\n    ctx.lineTo(x + width - radius, y);\r\n    ctx.arc(x + width - radius, y + radius, radius, Math.PI * 3 / 2, Math.PI * 2);\r\n    ctx.lineTo(x + width, y + height - radius);\r\n    ctx.arc(x + width - radius, y + height - radius, radius, Math.PI, Math.PI / 2);\r\n    ctx.lineTo(x + radius, y + height);\r\n    ctx.arc(x + radius, y + height - radius, radius, Math.PI / 2, Math.PI);\r\n    ctx.lineTo(x, y + radius);\r\n    ctx.arc(x + radius, y + radius, radius, Math.PI, Math.PI * 3 / 2);\r\n    ctx.fill();\r\n    ctx.closePath();\r\n\r\n    ctx.beginPath();\r\n    ctx.fillStyle = fontColor;\r\n    // ctx.font = 'normal bold 12px sans-serif';\r\n    ctx.setTextAlign(textAlign)\r\n    ctx.textBaseline = \"middle\";\r\n    ctx.fillText(text, x + width / 2, y + height / 2);\r\n}\r\n\r\nexport default {\r\n    fillRoundRect:fillRoundRect, //绘制矩形\r\n    roundRectBorder:roundRectBorder,//绘制矩形+边框\r\n    getImageInfo:getImageInfo, //加载图片\r\n    drawCircular:drawCircular, //绘制圆形头像\r\n    drawImgCover:drawImgCover, //绘制图片cover\r\n    dealWords:dealWords, //文本自定义换行\r\n    drawButton:drawButton, //绘制圆角按钮\r\n\tgetLineNum:getLineNum, //计算内容行数\r\n}","import qrcode from './qrcode';//用于绘制二维码\r\n\r\n// 保存图片\r\nlet settingWritePhotosAlbum = false;\r\nexport const saveImg = function(url,callback) {\r\n\tif (url) {\r\n\t\tconsole.log('url',url);\r\n\r\n\t\tif (settingWritePhotosAlbum) {\r\n\t\t\tuni.getSetting({\r\n\t\t\t\tsuccess: res => {\r\n\t\t\t\t\tif (res.authSetting['scope.writePhotosAlbum']) {\r\n                        uni.showLoading({\r\n                            title: '正在下载'\r\n                        });\r\n\t\t\t\t\t\tuni.downloadFile({\r\n\t\t\t\t\t\t\turl: url,\r\n\t\t\t\t\t\t\tsuccess: data => {\r\n\t\t\t\t\t\t\t\tconsole.log('data',data);\r\n\t\t\t\t\t\t\t\tif (data.statusCode == 200) {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tuni.saveImageToPhotosAlbum({\r\n\t\t\t\t\t\t\t\t\t\tfilePath: \"https://img.alicdn.com/imgextra/i2/195729828/O1CN01ip7ZbJ2MTHGyT6WoI_!!195729828.jpg\",\r\n\t\t\t\t\t\t\t\t\t\tsuccess: () => {\r\n                                            uni.hideLoading();\r\n\t\t\t\t\t\t\t\t\t\t\tcallback && callback();\r\n\t\t\t\t\t\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\t\t\t\t\t\ttitle: '保存成功'\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t},\r\n                                        fail(e) {\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"e\",e);\r\n                                            uni.hideLoading();\r\n                                            tip({\r\n                                                title: '下载失败，错误原因：' + e.errMsg,\r\n                                                icon: \"none\"\r\n                                            });\r\n                                        }\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t} else {\r\n                                    uni.hideLoading();\r\n                                    uni.showToast({\r\n                                    \ttitle: '下载失败',\r\n                                        icon: \"none\"\r\n                                    });\r\n                                }\r\n\t\t\t\t\t\t\t},\r\n                            fail(e) {\r\n                                uni.hideLoading();\r\n                                uni.showToast({\r\n                                \ttitle: '下载失败，错误原因：' + e.errMsg,\r\n                                    icon: \"none\"\r\n                                });\r\n                            }\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tuni.showModal({\r\n\t\t\t\t\t\t\ttitle: '提示',\r\n\t\t\t\t\t\t\tcontent: '请先在设置页面打开“保存相册”使用权限',\r\n\t\t\t\t\t\t\tconfirmText: '去设置',\r\n\t\t\t\t\t\t\tcancelText: '算了',\r\n\t\t\t\t\t\t\tsuccess: data => {\r\n\t\t\t\t\t\t\t\tif (data.confirm) {\r\n\t\t\t\t\t\t\t\t\tuni.openSetting();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tsettingWritePhotosAlbum = true;\r\n\t\t\tuni.authorize({\r\n\t\t\t\tscope: 'scope.writePhotosAlbum',\r\n\t\t\t\tsuccess: () => {\r\n                    uni.showLoading({\r\n                        title: '正在下载'\r\n                    });\r\n\t\t\t\t\tuni.downloadFile({\r\n\t\t\t\t\t\turl: url,\r\n\t\t\t\t\t\tsuccess: data => {\r\n\t\t\t\t\t\t\tif (data.statusCode == 200) {\r\n\t\t\t\t\t\t\t\tuni.saveImageToPhotosAlbum({\r\n\t\t\t\t\t\t\t\t\tfilePath: data.tempFilePath,\r\n\t\t\t\t\t\t\t\t\tsuccess: () => {\r\n                                        uni.hideLoading();\r\n\t\t\t\t\t\t\t\t\t\tcallback && callback();\r\n\t\t\t\t\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\t\t\t\t\ttitle: '保存成功'\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t},\r\n                                    fail(e) {\r\n                                        uni.hideLoading();\r\n                                        tip({\r\n                                            title: '下载失败，错误原因：' + e.errMsg,\r\n                                            icon: \"none\"\r\n                                        });\r\n                                    }\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t} else {\r\n                                uni.hideLoading();\r\n                                uni.showToast({\r\n                                    title: '下载失败',\r\n                                    icon: \"none\"\r\n                                });\r\n                            }\r\n                        },\r\n                        fail(e) {\r\n                            uni.hideLoading();\r\n                            uni.showToast({\r\n                                title: '下载失败，错误原因：' + e.errMsg,\r\n                                icon: \"none\"\r\n                            });\r\n                        }\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t} else {\r\n\t\tuni.showToast({\r\n\t\t\ttitle: '未找到图片',\r\n\t\t\ticon: 'none'\r\n\t\t});\r\n\t}\r\n};\r\n\r\n// 绘制二维码\r\nexport const qrcodeCanvas = function(id, code, width, height, that) {\r\n    qrcode.api.draw(code, {\r\n        ctx: uni.createCanvasContext(id, that),\r\n        width: convert_length(width),\r\n        height: convert_length(height)\r\n    })\r\n}\r\nfunction convert_length(length) {\r\n    return Math.round(uni.getSystemInfoSync().windowWidth * length / 750);\r\n}","var QR = (function() {\r\n\r\n    // alignment pattern\r\n    var adelta = [\r\n        0, 11, 15, 19, 23, 27, 31, // force 1 pat\r\n        16, 18, 20, 22, 24, 26, 28, 20, 22, 24, 24, 26, 28, 28, 22, 24, 24,\r\n        26, 26, 28, 28, 24, 24, 26, 26, 26, 28, 28, 24, 26, 26, 26, 28, 28\r\n    ];\r\n\r\n    // version block\r\n    var vpat = [\r\n        0xc94, 0x5bc, 0xa99, 0x4d3, 0xbf6, 0x762, 0x847, 0x60d,\r\n        0x928, 0xb78, 0x45d, 0xa17, 0x532, 0x9a6, 0x683, 0x8c9,\r\n        0x7ec, 0xec4, 0x1e1, 0xfab, 0x08e, 0xc1a, 0x33f, 0xd75,\r\n        0x250, 0x9d5, 0x6f0, 0x8ba, 0x79f, 0xb0b, 0x42e, 0xa64,\r\n        0x541, 0xc69\r\n    ];\r\n\r\n    // final format bits with mask: level << 3 | mask\r\n    var fmtword = [\r\n        0x77c4, 0x72f3, 0x7daa, 0x789d, 0x662f, 0x6318, 0x6c41, 0x6976, //L\r\n        0x5412, 0x5125, 0x5e7c, 0x5b4b, 0x45f9, 0x40ce, 0x4f97, 0x4aa0, //M\r\n        0x355f, 0x3068, 0x3f31, 0x3a06, 0x24b4, 0x2183, 0x2eda, 0x2bed, //Q\r\n        0x1689, 0x13be, 0x1ce7, 0x19d0, 0x0762, 0x0255, 0x0d0c, 0x083b //H\r\n    ];\r\n\r\n    // 4 per version: number of blocks 1,2; data width; ecc width\r\n    var eccblocks = [\r\n        1, 0, 19, 7, 1, 0, 16, 10, 1, 0, 13, 13, 1, 0, 9, 17,\r\n        1, 0, 34, 10, 1, 0, 28, 16, 1, 0, 22, 22, 1, 0, 16, 28,\r\n        1, 0, 55, 15, 1, 0, 44, 26, 2, 0, 17, 18, 2, 0, 13, 22,\r\n        1, 0, 80, 20, 2, 0, 32, 18, 2, 0, 24, 26, 4, 0, 9, 16,\r\n        1, 0, 108, 26, 2, 0, 43, 24, 2, 2, 15, 18, 2, 2, 11, 22,\r\n        2, 0, 68, 18, 4, 0, 27, 16, 4, 0, 19, 24, 4, 0, 15, 28,\r\n        2, 0, 78, 20, 4, 0, 31, 18, 2, 4, 14, 18, 4, 1, 13, 26,\r\n        2, 0, 97, 24, 2, 2, 38, 22, 4, 2, 18, 22, 4, 2, 14, 26,\r\n        2, 0, 116, 30, 3, 2, 36, 22, 4, 4, 16, 20, 4, 4, 12, 24,\r\n        2, 2, 68, 18, 4, 1, 43, 26, 6, 2, 19, 24, 6, 2, 15, 28,\r\n        4, 0, 81, 20, 1, 4, 50, 30, 4, 4, 22, 28, 3, 8, 12, 24,\r\n        2, 2, 92, 24, 6, 2, 36, 22, 4, 6, 20, 26, 7, 4, 14, 28,\r\n        4, 0, 107, 26, 8, 1, 37, 22, 8, 4, 20, 24, 12, 4, 11, 22,\r\n        3, 1, 115, 30, 4, 5, 40, 24, 11, 5, 16, 20, 11, 5, 12, 24,\r\n        5, 1, 87, 22, 5, 5, 41, 24, 5, 7, 24, 30, 11, 7, 12, 24,\r\n        5, 1, 98, 24, 7, 3, 45, 28, 15, 2, 19, 24, 3, 13, 15, 30,\r\n        1, 5, 107, 28, 10, 1, 46, 28, 1, 15, 22, 28, 2, 17, 14, 28,\r\n        5, 1, 120, 30, 9, 4, 43, 26, 17, 1, 22, 28, 2, 19, 14, 28,\r\n        3, 4, 113, 28, 3, 11, 44, 26, 17, 4, 21, 26, 9, 16, 13, 26,\r\n        3, 5, 107, 28, 3, 13, 41, 26, 15, 5, 24, 30, 15, 10, 15, 28,\r\n        4, 4, 116, 28, 17, 0, 42, 26, 17, 6, 22, 28, 19, 6, 16, 30,\r\n        2, 7, 111, 28, 17, 0, 46, 28, 7, 16, 24, 30, 34, 0, 13, 24,\r\n        4, 5, 121, 30, 4, 14, 47, 28, 11, 14, 24, 30, 16, 14, 15, 30,\r\n        6, 4, 117, 30, 6, 14, 45, 28, 11, 16, 24, 30, 30, 2, 16, 30,\r\n        8, 4, 106, 26, 8, 13, 47, 28, 7, 22, 24, 30, 22, 13, 15, 30,\r\n        10, 2, 114, 28, 19, 4, 46, 28, 28, 6, 22, 28, 33, 4, 16, 30,\r\n        8, 4, 122, 30, 22, 3, 45, 28, 8, 26, 23, 30, 12, 28, 15, 30,\r\n        3, 10, 117, 30, 3, 23, 45, 28, 4, 31, 24, 30, 11, 31, 15, 30,\r\n        7, 7, 116, 30, 21, 7, 45, 28, 1, 37, 23, 30, 19, 26, 15, 30,\r\n        5, 10, 115, 30, 19, 10, 47, 28, 15, 25, 24, 30, 23, 25, 15, 30,\r\n        13, 3, 115, 30, 2, 29, 46, 28, 42, 1, 24, 30, 23, 28, 15, 30,\r\n        17, 0, 115, 30, 10, 23, 46, 28, 10, 35, 24, 30, 19, 35, 15, 30,\r\n        17, 1, 115, 30, 14, 21, 46, 28, 29, 19, 24, 30, 11, 46, 15, 30,\r\n        13, 6, 115, 30, 14, 23, 46, 28, 44, 7, 24, 30, 59, 1, 16, 30,\r\n        12, 7, 121, 30, 12, 26, 47, 28, 39, 14, 24, 30, 22, 41, 15, 30,\r\n        6, 14, 121, 30, 6, 34, 47, 28, 46, 10, 24, 30, 2, 64, 15, 30,\r\n        17, 4, 122, 30, 29, 14, 46, 28, 49, 10, 24, 30, 24, 46, 15, 30,\r\n        4, 18, 122, 30, 13, 32, 46, 28, 48, 14, 24, 30, 42, 32, 15, 30,\r\n        20, 4, 117, 30, 40, 7, 47, 28, 43, 22, 24, 30, 10, 67, 15, 30,\r\n        19, 6, 118, 30, 18, 31, 47, 28, 34, 34, 24, 30, 20, 61, 15, 30\r\n    ];\r\n\r\n    // Galois field log table\r\n    var glog = [\r\n        0xff, 0x00, 0x01, 0x19, 0x02, 0x32, 0x1a, 0xc6, 0x03, 0xdf, 0x33, 0xee, 0x1b, 0x68, 0xc7, 0x4b,\r\n        0x04, 0x64, 0xe0, 0x0e, 0x34, 0x8d, 0xef, 0x81, 0x1c, 0xc1, 0x69, 0xf8, 0xc8, 0x08, 0x4c, 0x71,\r\n        0x05, 0x8a, 0x65, 0x2f, 0xe1, 0x24, 0x0f, 0x21, 0x35, 0x93, 0x8e, 0xda, 0xf0, 0x12, 0x82, 0x45,\r\n        0x1d, 0xb5, 0xc2, 0x7d, 0x6a, 0x27, 0xf9, 0xb9, 0xc9, 0x9a, 0x09, 0x78, 0x4d, 0xe4, 0x72, 0xa6,\r\n        0x06, 0xbf, 0x8b, 0x62, 0x66, 0xdd, 0x30, 0xfd, 0xe2, 0x98, 0x25, 0xb3, 0x10, 0x91, 0x22, 0x88,\r\n        0x36, 0xd0, 0x94, 0xce, 0x8f, 0x96, 0xdb, 0xbd, 0xf1, 0xd2, 0x13, 0x5c, 0x83, 0x38, 0x46, 0x40,\r\n        0x1e, 0x42, 0xb6, 0xa3, 0xc3, 0x48, 0x7e, 0x6e, 0x6b, 0x3a, 0x28, 0x54, 0xfa, 0x85, 0xba, 0x3d,\r\n        0xca, 0x5e, 0x9b, 0x9f, 0x0a, 0x15, 0x79, 0x2b, 0x4e, 0xd4, 0xe5, 0xac, 0x73, 0xf3, 0xa7, 0x57,\r\n        0x07, 0x70, 0xc0, 0xf7, 0x8c, 0x80, 0x63, 0x0d, 0x67, 0x4a, 0xde, 0xed, 0x31, 0xc5, 0xfe, 0x18,\r\n        0xe3, 0xa5, 0x99, 0x77, 0x26, 0xb8, 0xb4, 0x7c, 0x11, 0x44, 0x92, 0xd9, 0x23, 0x20, 0x89, 0x2e,\r\n        0x37, 0x3f, 0xd1, 0x5b, 0x95, 0xbc, 0xcf, 0xcd, 0x90, 0x87, 0x97, 0xb2, 0xdc, 0xfc, 0xbe, 0x61,\r\n        0xf2, 0x56, 0xd3, 0xab, 0x14, 0x2a, 0x5d, 0x9e, 0x84, 0x3c, 0x39, 0x53, 0x47, 0x6d, 0x41, 0xa2,\r\n        0x1f, 0x2d, 0x43, 0xd8, 0xb7, 0x7b, 0xa4, 0x76, 0xc4, 0x17, 0x49, 0xec, 0x7f, 0x0c, 0x6f, 0xf6,\r\n        0x6c, 0xa1, 0x3b, 0x52, 0x29, 0x9d, 0x55, 0xaa, 0xfb, 0x60, 0x86, 0xb1, 0xbb, 0xcc, 0x3e, 0x5a,\r\n        0xcb, 0x59, 0x5f, 0xb0, 0x9c, 0xa9, 0xa0, 0x51, 0x0b, 0xf5, 0x16, 0xeb, 0x7a, 0x75, 0x2c, 0xd7,\r\n        0x4f, 0xae, 0xd5, 0xe9, 0xe6, 0xe7, 0xad, 0xe8, 0x74, 0xd6, 0xf4, 0xea, 0xa8, 0x50, 0x58, 0xaf\r\n    ];\r\n\r\n    // Galios field exponent table\r\n    var gexp = [\r\n        0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1d, 0x3a, 0x74, 0xe8, 0xcd, 0x87, 0x13, 0x26,\r\n        0x4c, 0x98, 0x2d, 0x5a, 0xb4, 0x75, 0xea, 0xc9, 0x8f, 0x03, 0x06, 0x0c, 0x18, 0x30, 0x60, 0xc0,\r\n        0x9d, 0x27, 0x4e, 0x9c, 0x25, 0x4a, 0x94, 0x35, 0x6a, 0xd4, 0xb5, 0x77, 0xee, 0xc1, 0x9f, 0x23,\r\n        0x46, 0x8c, 0x05, 0x0a, 0x14, 0x28, 0x50, 0xa0, 0x5d, 0xba, 0x69, 0xd2, 0xb9, 0x6f, 0xde, 0xa1,\r\n        0x5f, 0xbe, 0x61, 0xc2, 0x99, 0x2f, 0x5e, 0xbc, 0x65, 0xca, 0x89, 0x0f, 0x1e, 0x3c, 0x78, 0xf0,\r\n        0xfd, 0xe7, 0xd3, 0xbb, 0x6b, 0xd6, 0xb1, 0x7f, 0xfe, 0xe1, 0xdf, 0xa3, 0x5b, 0xb6, 0x71, 0xe2,\r\n        0xd9, 0xaf, 0x43, 0x86, 0x11, 0x22, 0x44, 0x88, 0x0d, 0x1a, 0x34, 0x68, 0xd0, 0xbd, 0x67, 0xce,\r\n        0x81, 0x1f, 0x3e, 0x7c, 0xf8, 0xed, 0xc7, 0x93, 0x3b, 0x76, 0xec, 0xc5, 0x97, 0x33, 0x66, 0xcc,\r\n        0x85, 0x17, 0x2e, 0x5c, 0xb8, 0x6d, 0xda, 0xa9, 0x4f, 0x9e, 0x21, 0x42, 0x84, 0x15, 0x2a, 0x54,\r\n        0xa8, 0x4d, 0x9a, 0x29, 0x52, 0xa4, 0x55, 0xaa, 0x49, 0x92, 0x39, 0x72, 0xe4, 0xd5, 0xb7, 0x73,\r\n        0xe6, 0xd1, 0xbf, 0x63, 0xc6, 0x91, 0x3f, 0x7e, 0xfc, 0xe5, 0xd7, 0xb3, 0x7b, 0xf6, 0xf1, 0xff,\r\n        0xe3, 0xdb, 0xab, 0x4b, 0x96, 0x31, 0x62, 0xc4, 0x95, 0x37, 0x6e, 0xdc, 0xa5, 0x57, 0xae, 0x41,\r\n        0x82, 0x19, 0x32, 0x64, 0xc8, 0x8d, 0x07, 0x0e, 0x1c, 0x38, 0x70, 0xe0, 0xdd, 0xa7, 0x53, 0xa6,\r\n        0x51, 0xa2, 0x59, 0xb2, 0x79, 0xf2, 0xf9, 0xef, 0xc3, 0x9b, 0x2b, 0x56, 0xac, 0x45, 0x8a, 0x09,\r\n        0x12, 0x24, 0x48, 0x90, 0x3d, 0x7a, 0xf4, 0xf5, 0xf7, 0xf3, 0xfb, 0xeb, 0xcb, 0x8b, 0x0b, 0x16,\r\n        0x2c, 0x58, 0xb0, 0x7d, 0xfa, 0xe9, 0xcf, 0x83, 0x1b, 0x36, 0x6c, 0xd8, 0xad, 0x47, 0x8e, 0x00\r\n    ];\r\n\r\n    // Working buffers:\r\n    // data input and ecc append, image working buffer, fixed part of image, run lengths for badness\r\n    var strinbuf = [],\r\n        eccbuf = [],\r\n        qrframe = [],\r\n        framask = [],\r\n        rlens = [];\r\n    // Control values - width is based on version, last 4 are from table.\r\n    var version, width, neccblk1, neccblk2, datablkw, eccblkwid;\r\n    var ecclevel = 2;\r\n    // set bit to indicate cell in qrframe is immutable.  symmetric around diagonal\r\n    function setmask(x, y) {\r\n        var bt;\r\n        if (x > y) {\r\n            bt = x;\r\n            x = y;\r\n            y = bt;\r\n        }\r\n        // y*y = 1+3+5...\r\n        bt = y;\r\n        bt *= y;\r\n        bt += y;\r\n        bt >>= 1;\r\n        bt += x;\r\n        framask[bt] = 1;\r\n    }\r\n\r\n    // enter alignment pattern - black to qrframe, white to mask (later black frame merged to mask)\r\n    function putalign(x, y) {\r\n        var j;\r\n\r\n        qrframe[x + width * y] = 1;\r\n        for (j = -2; j < 2; j++) {\r\n            qrframe[(x + j) + width * (y - 2)] = 1;\r\n            qrframe[(x - 2) + width * (y + j + 1)] = 1;\r\n            qrframe[(x + 2) + width * (y + j)] = 1;\r\n            qrframe[(x + j + 1) + width * (y + 2)] = 1;\r\n        }\r\n        for (j = 0; j < 2; j++) {\r\n            setmask(x - 1, y + j);\r\n            setmask(x + 1, y - j);\r\n            setmask(x - j, y - 1);\r\n            setmask(x + j, y + 1);\r\n        }\r\n    }\r\n\r\n    //========================================================================\r\n    // Reed Solomon error correction\r\n    // exponentiation mod N\r\n    function modnn(x) {\r\n        while (x >= 255) {\r\n            x -= 255;\r\n            x = (x >> 8) + (x & 255);\r\n        }\r\n        return x;\r\n    }\r\n\r\n    var genpoly = [];\r\n\r\n    // Calculate and append ECC data to data block.  Block is in strinbuf, indexes to buffers given.\r\n    function appendrs(data, dlen, ecbuf, eclen) {\r\n        var i, j, fb;\r\n\r\n        for (i = 0; i < eclen; i++)\r\n            strinbuf[ecbuf + i] = 0;\r\n        for (i = 0; i < dlen; i++) {\r\n            fb = glog[strinbuf[data + i] ^ strinbuf[ecbuf]];\r\n            if (fb != 255) /* fb term is non-zero */\r\n                for (j = 1; j < eclen; j++)\r\n                    strinbuf[ecbuf + j - 1] = strinbuf[ecbuf + j] ^ gexp[modnn(fb + genpoly[eclen - j])];\r\n            else\r\n                for (j = ecbuf; j < ecbuf + eclen; j++)\r\n                    strinbuf[j] = strinbuf[j + 1];\r\n            strinbuf[ecbuf + eclen - 1] = fb == 255 ? 0 : gexp[modnn(fb + genpoly[0])];\r\n        }\r\n    }\r\n\r\n    //========================================================================\r\n    // Frame data insert following the path rules\r\n\r\n    // check mask - since symmetrical use half.\r\n    function ismasked(x, y) {\r\n        var bt;\r\n        if (x > y) {\r\n            bt = x;\r\n            x = y;\r\n            y = bt;\r\n        }\r\n        bt = y;\r\n        bt += y * y;\r\n        bt >>= 1;\r\n        bt += x;\r\n        return framask[bt];\r\n    }\r\n\r\n    //========================================================================\r\n    //  Apply the selected mask out of the 8.\r\n    function applymask(m) {\r\n        var x, y, r3x, r3y;\r\n\r\n        switch (m) {\r\n            case 0:\r\n                for (y = 0; y < width; y++)\r\n                    for (x = 0; x < width; x++)\r\n                        if (!((x + y) & 1) && !ismasked(x, y))\r\n                            qrframe[x + y * width] ^= 1;\r\n                break;\r\n            case 1:\r\n                for (y = 0; y < width; y++)\r\n                    for (x = 0; x < width; x++)\r\n                        if (!(y & 1) && !ismasked(x, y))\r\n                            qrframe[x + y * width] ^= 1;\r\n                break;\r\n            case 2:\r\n                for (y = 0; y < width; y++)\r\n                    for (r3x = 0, x = 0; x < width; x++, r3x++) {\r\n                        if (r3x == 3)\r\n                            r3x = 0;\r\n                        if (!r3x && !ismasked(x, y))\r\n                            qrframe[x + y * width] ^= 1;\r\n                    }\r\n                break;\r\n            case 3:\r\n                for (r3y = 0, y = 0; y < width; y++, r3y++) {\r\n                    if (r3y == 3)\r\n                        r3y = 0;\r\n                    for (r3x = r3y, x = 0; x < width; x++, r3x++) {\r\n                        if (r3x == 3)\r\n                            r3x = 0;\r\n                        if (!r3x && !ismasked(x, y))\r\n                            qrframe[x + y * width] ^= 1;\r\n                    }\r\n                }\r\n                break;\r\n            case 4:\r\n                for (y = 0; y < width; y++)\r\n                    for (r3x = 0, r3y = ((y >> 1) & 1), x = 0; x < width; x++, r3x++) {\r\n                        if (r3x == 3) {\r\n                            r3x = 0;\r\n                            r3y = !r3y;\r\n                        }\r\n                        if (!r3y && !ismasked(x, y))\r\n                            qrframe[x + y * width] ^= 1;\r\n                    }\r\n                break;\r\n            case 5:\r\n                for (r3y = 0, y = 0; y < width; y++, r3y++) {\r\n                    if (r3y == 3)\r\n                        r3y = 0;\r\n                    for (r3x = 0, x = 0; x < width; x++, r3x++) {\r\n                        if (r3x == 3)\r\n                            r3x = 0;\r\n                        if (!((x & y & 1) + !(!r3x | !r3y)) && !ismasked(x, y))\r\n                            qrframe[x + y * width] ^= 1;\r\n                    }\r\n                }\r\n                break;\r\n            case 6:\r\n                for (r3y = 0, y = 0; y < width; y++, r3y++) {\r\n                    if (r3y == 3)\r\n                        r3y = 0;\r\n                    for (r3x = 0, x = 0; x < width; x++, r3x++) {\r\n                        if (r3x == 3)\r\n                            r3x = 0;\r\n                        if (!(((x & y & 1) + (r3x && (r3x == r3y))) & 1) && !ismasked(x, y))\r\n                            qrframe[x + y * width] ^= 1;\r\n                    }\r\n                }\r\n                break;\r\n            case 7:\r\n                for (r3y = 0, y = 0; y < width; y++, r3y++) {\r\n                    if (r3y == 3)\r\n                        r3y = 0;\r\n                    for (r3x = 0, x = 0; x < width; x++, r3x++) {\r\n                        if (r3x == 3)\r\n                            r3x = 0;\r\n                        if (!(((r3x && (r3x == r3y)) + ((x + y) & 1)) & 1) && !ismasked(x, y))\r\n                            qrframe[x + y * width] ^= 1;\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        return;\r\n    }\r\n\r\n    // Badness coefficients.\r\n    var N1 = 3,\r\n        N2 = 3,\r\n        N3 = 40,\r\n        N4 = 10;\r\n\r\n    // Using the table of the length of each run, calculate the amount of bad image \r\n    // - long runs or those that look like finders; called twice, once each for X and Y\r\n    function badruns(length) {\r\n        var i;\r\n        var runsbad = 0;\r\n        for (i = 0; i <= length; i++)\r\n            if (rlens[i] >= 5)\r\n                runsbad += N1 + rlens[i] - 5;\r\n            // BwBBBwB as in finder\r\n        for (i = 3; i < length - 1; i += 2)\r\n            if (rlens[i - 2] == rlens[i + 2] &&\r\n                rlens[i + 2] == rlens[i - 1] &&\r\n                rlens[i - 1] == rlens[i + 1] &&\r\n                rlens[i - 1] * 3 == rlens[i]\r\n                // white around the black pattern? Not part of spec\r\n                &&\r\n                (rlens[i - 3] == 0 // beginning\r\n                    ||\r\n                    i + 3 > length // end\r\n                    ||\r\n                    rlens[i - 3] * 3 >= rlens[i] * 4 || rlens[i + 3] * 3 >= rlens[i] * 4)\r\n            )\r\n                runsbad += N3;\r\n        return runsbad;\r\n    }\r\n\r\n    // Calculate how bad the masked image is - blocks, imbalance, runs, or finders.\r\n    function badcheck() {\r\n        var x, y, h, b, b1;\r\n        var thisbad = 0;\r\n        var bw = 0;\r\n\r\n        // blocks of same color.\r\n        for (y = 0; y < width - 1; y++)\r\n            for (x = 0; x < width - 1; x++)\r\n                if ((qrframe[x + width * y] && qrframe[(x + 1) + width * y] &&\r\n                        qrframe[x + width * (y + 1)] && qrframe[(x + 1) + width * (y + 1)]) // all black\r\n                    ||\r\n                    !(qrframe[x + width * y] || qrframe[(x + 1) + width * y] ||\r\n                        qrframe[x + width * (y + 1)] || qrframe[(x + 1) + width * (y + 1)])) // all white\r\n                    thisbad += N2;\r\n\r\n                // X runs\r\n        for (y = 0; y < width; y++) {\r\n            rlens[0] = 0;\r\n            for (h = b = x = 0; x < width; x++) {\r\n                if ((b1 = qrframe[x + width * y]) == b)\r\n                    rlens[h]++;\r\n                else\r\n                    rlens[++h] = 1;\r\n                b = b1;\r\n                bw += b ? 1 : -1;\r\n            }\r\n            thisbad += badruns(h);\r\n        }\r\n\r\n        // black/white imbalance\r\n        if (bw < 0)\r\n            bw = -bw;\r\n\r\n        var big = bw;\r\n        var count = 0;\r\n        big += big << 2;\r\n        big <<= 1;\r\n        while (big > width * width)\r\n            big -= width * width, count++;\r\n        thisbad += count * N4;\r\n\r\n        // Y runs\r\n        for (x = 0; x < width; x++) {\r\n            rlens[0] = 0;\r\n            for (h = b = y = 0; y < width; y++) {\r\n                if ((b1 = qrframe[x + width * y]) == b)\r\n                    rlens[h]++;\r\n                else\r\n                    rlens[++h] = 1;\r\n                b = b1;\r\n            }\r\n            thisbad += badruns(h);\r\n        }\r\n        return thisbad;\r\n    }\r\n\r\n    function genframe(instring) {\r\n        var x, y, k, t, v, i, j, m;\r\n\r\n        // find the smallest version that fits the string\r\n        t = instring.length;\r\n        version = 0;\r\n        do {\r\n            version++;\r\n            k = (ecclevel - 1) * 4 + (version - 1) * 16;\r\n            neccblk1 = eccblocks[k++];\r\n            neccblk2 = eccblocks[k++];\r\n            datablkw = eccblocks[k++];\r\n            eccblkwid = eccblocks[k];\r\n            k = datablkw * (neccblk1 + neccblk2) + neccblk2 - 3 + (version <= 9);\r\n            if (t <= k)\r\n                break;\r\n        } while (version < 40);\r\n\r\n        // FIXME - insure that it fits insted of being truncated\r\n        width = 17 + 4 * version;\r\n\r\n        // allocate, clear and setup data structures\r\n        v = datablkw + (datablkw + eccblkwid) * (neccblk1 + neccblk2) + neccblk2;\r\n        for (t = 0; t < v; t++)\r\n            eccbuf[t] = 0;\r\n        strinbuf = instring.slice(0);\r\n\r\n        for (t = 0; t < width * width; t++)\r\n            qrframe[t] = 0;\r\n\r\n        for (t = 0; t < (width * (width + 1) + 1) / 2; t++)\r\n            framask[t] = 0;\r\n\r\n        // insert finders - black to frame, white to mask\r\n        for (t = 0; t < 3; t++) {\r\n            k = 0;\r\n            y = 0;\r\n            if (t == 1)\r\n                k = (width - 7);\r\n            if (t == 2)\r\n                y = (width - 7);\r\n            qrframe[(y + 3) + width * (k + 3)] = 1;\r\n            for (x = 0; x < 6; x++) {\r\n                qrframe[(y + x) + width * k] = 1;\r\n                qrframe[y + width * (k + x + 1)] = 1;\r\n                qrframe[(y + 6) + width * (k + x)] = 1;\r\n                qrframe[(y + x + 1) + width * (k + 6)] = 1;\r\n            }\r\n            for (x = 1; x < 5; x++) {\r\n                setmask(y + x, k + 1);\r\n                setmask(y + 1, k + x + 1);\r\n                setmask(y + 5, k + x);\r\n                setmask(y + x + 1, k + 5);\r\n            }\r\n            for (x = 2; x < 4; x++) {\r\n                qrframe[(y + x) + width * (k + 2)] = 1;\r\n                qrframe[(y + 2) + width * (k + x + 1)] = 1;\r\n                qrframe[(y + 4) + width * (k + x)] = 1;\r\n                qrframe[(y + x + 1) + width * (k + 4)] = 1;\r\n            }\r\n        }\r\n\r\n        // alignment blocks\r\n        if (version > 1) {\r\n            t = adelta[version];\r\n            y = width - 7;\r\n            for (;;) {\r\n                x = width - 7;\r\n                while (x > t - 3) {\r\n                    putalign(x, y);\r\n                    if (x < t)\r\n                        break;\r\n                    x -= t;\r\n                }\r\n                if (y <= t + 9)\r\n                    break;\r\n                y -= t;\r\n                putalign(6, y);\r\n                putalign(y, 6);\r\n            }\r\n        }\r\n\r\n        // single black\r\n        qrframe[8 + width * (width - 8)] = 1;\r\n\r\n        // timing gap - mask only\r\n        for (y = 0; y < 7; y++) {\r\n            setmask(7, y);\r\n            setmask(width - 8, y);\r\n            setmask(7, y + width - 7);\r\n        }\r\n        for (x = 0; x < 8; x++) {\r\n            setmask(x, 7);\r\n            setmask(x + width - 8, 7);\r\n            setmask(x, width - 8);\r\n        }\r\n\r\n        // reserve mask-format area\r\n        for (x = 0; x < 9; x++)\r\n            setmask(x, 8);\r\n        for (x = 0; x < 8; x++) {\r\n            setmask(x + width - 8, 8);\r\n            setmask(8, x);\r\n        }\r\n        for (y = 0; y < 7; y++)\r\n            setmask(8, y + width - 7);\r\n\r\n        // timing row/col\r\n        for (x = 0; x < width - 14; x++)\r\n            if (x & 1) {\r\n                setmask(8 + x, 6);\r\n                setmask(6, 8 + x);\r\n            } else {\r\n                qrframe[(8 + x) + width * 6] = 1;\r\n                qrframe[6 + width * (8 + x)] = 1;\r\n            }\r\n\r\n            // version block\r\n        if (version > 6) {\r\n            t = vpat[version - 7];\r\n            k = 17;\r\n            for (x = 0; x < 6; x++)\r\n                for (y = 0; y < 3; y++, k--)\r\n                    if (1 & (k > 11 ? version >> (k - 12) : t >> k)) {\r\n                        qrframe[(5 - x) + width * (2 - y + width - 11)] = 1;\r\n                        qrframe[(2 - y + width - 11) + width * (5 - x)] = 1;\r\n                    } else {\r\n                        setmask(5 - x, 2 - y + width - 11);\r\n                        setmask(2 - y + width - 11, 5 - x);\r\n                    }\r\n        }\r\n\r\n        // sync mask bits - only set above for white spaces, so add in black bits\r\n        for (y = 0; y < width; y++)\r\n            for (x = 0; x <= y; x++)\r\n                if (qrframe[x + width * y])\r\n                    setmask(x, y);\r\n\r\n                // convert string to bitstream\r\n                // 8 bit data to QR-coded 8 bit data (numeric or alphanum, or kanji not supported)\r\n        v = strinbuf.length;\r\n\r\n        // string to array\r\n        for (i = 0; i < v; i++)\r\n            eccbuf[i] = strinbuf.charCodeAt(i);\r\n        strinbuf = eccbuf.slice(0);\r\n\r\n        // calculate max string length\r\n        x = datablkw * (neccblk1 + neccblk2) + neccblk2;\r\n        if (v >= x - 2) {\r\n            v = x - 2;\r\n            if (version > 9)\r\n                v--;\r\n        }\r\n\r\n        // shift and repack to insert length prefix\r\n        i = v;\r\n        if (version > 9) {\r\n            strinbuf[i + 2] = 0;\r\n            strinbuf[i + 3] = 0;\r\n            while (i--) {\r\n                t = strinbuf[i];\r\n                strinbuf[i + 3] |= 255 & (t << 4);\r\n                strinbuf[i + 2] = t >> 4;\r\n            }\r\n            strinbuf[2] |= 255 & (v << 4);\r\n            strinbuf[1] = v >> 4;\r\n            strinbuf[0] = 0x40 | (v >> 12);\r\n        } else {\r\n            strinbuf[i + 1] = 0;\r\n            strinbuf[i + 2] = 0;\r\n            while (i--) {\r\n                t = strinbuf[i];\r\n                strinbuf[i + 2] |= 255 & (t << 4);\r\n                strinbuf[i + 1] = t >> 4;\r\n            }\r\n            strinbuf[1] |= 255 & (v << 4);\r\n            strinbuf[0] = 0x40 | (v >> 4);\r\n        }\r\n        // fill to end with pad pattern\r\n        i = v + 3 - (version < 10);\r\n        while (i < x) {\r\n            strinbuf[i++] = 0xec;\r\n            // buffer has room    if (i == x)      break;\r\n            strinbuf[i++] = 0x11;\r\n        }\r\n\r\n        // calculate and append ECC\r\n\r\n        // calculate generator polynomial\r\n        genpoly[0] = 1;\r\n        for (i = 0; i < eccblkwid; i++) {\r\n            genpoly[i + 1] = 1;\r\n            for (j = i; j > 0; j--)\r\n                genpoly[j] = genpoly[j] ?\r\n                genpoly[j - 1] ^ gexp[modnn(glog[genpoly[j]] + i)] : genpoly[j - 1];\r\n            genpoly[0] = gexp[modnn(glog[genpoly[0]] + i)];\r\n        }\r\n        for (i = 0; i <= eccblkwid; i++)\r\n            genpoly[i] = glog[genpoly[i]]; // use logs for genpoly[] to save calc step\r\n\r\n        // append ecc to data buffer\r\n        k = x;\r\n        y = 0;\r\n        for (i = 0; i < neccblk1; i++) {\r\n            appendrs(y, datablkw, k, eccblkwid);\r\n            y += datablkw;\r\n            k += eccblkwid;\r\n        }\r\n        for (i = 0; i < neccblk2; i++) {\r\n            appendrs(y, datablkw + 1, k, eccblkwid);\r\n            y += datablkw + 1;\r\n            k += eccblkwid;\r\n        }\r\n        // interleave blocks\r\n        y = 0;\r\n        for (i = 0; i < datablkw; i++) {\r\n            for (j = 0; j < neccblk1; j++)\r\n                eccbuf[y++] = strinbuf[i + j * datablkw];\r\n            for (j = 0; j < neccblk2; j++)\r\n                eccbuf[y++] = strinbuf[(neccblk1 * datablkw) + i + (j * (datablkw + 1))];\r\n        }\r\n        for (j = 0; j < neccblk2; j++)\r\n            eccbuf[y++] = strinbuf[(neccblk1 * datablkw) + i + (j * (datablkw + 1))];\r\n        for (i = 0; i < eccblkwid; i++)\r\n            for (j = 0; j < neccblk1 + neccblk2; j++)\r\n                eccbuf[y++] = strinbuf[x + i + j * eccblkwid];\r\n        strinbuf = eccbuf;\r\n\r\n        // pack bits into frame avoiding masked area.\r\n        x = y = width - 1;\r\n        k = v = 1; // up, minus\r\n        /* inteleaved data and ecc codes */\r\n        m = (datablkw + eccblkwid) * (neccblk1 + neccblk2) + neccblk2;\r\n        for (i = 0; i < m; i++) {\r\n            t = strinbuf[i];\r\n            for (j = 0; j < 8; j++, t <<= 1) {\r\n                if (0x80 & t)\r\n                    qrframe[x + width * y] = 1;\r\n                do { // find next fill position\r\n                    if (v)\r\n                        x--;\r\n                    else {\r\n                        x++;\r\n                        if (k) {\r\n                            if (y != 0)\r\n                                y--;\r\n                            else {\r\n                                x -= 2;\r\n                                k = !k;\r\n                                if (x == 6) {\r\n                                    x--;\r\n                                    y = 9;\r\n                                }\r\n                            }\r\n                        } else {\r\n                            if (y != width - 1)\r\n                                y++;\r\n                            else {\r\n                                x -= 2;\r\n                                k = !k;\r\n                                if (x == 6) {\r\n                                    x--;\r\n                                    y -= 8;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    v = !v;\r\n                } while (ismasked(x, y));\r\n            }\r\n        }\r\n\r\n        // save pre-mask copy of frame\r\n        strinbuf = qrframe.slice(0);\r\n        t = 0; // best\r\n        y = 30000; // demerit\r\n        // for instead of while since in original arduino code\r\n        // if an early mask was \"good enough\" it wouldn't try for a better one\r\n        // since they get more complex and take longer.\r\n        for (k = 0; k < 8; k++) {\r\n            applymask(k); // returns black-white imbalance\r\n            x = badcheck();\r\n            if (x < y) { // current mask better than previous best?\r\n                y = x;\r\n                t = k;\r\n            }\r\n            if (t == 7)\r\n                break; // don't increment i to a void redoing mask\r\n            qrframe = strinbuf.slice(0); // reset for next pass\r\n        }\r\n        if (t != k) // redo best mask - none good enough, last wasn't t\r\n            applymask(t);\r\n\r\n        // add in final mask/ecclevel bytes\r\n        y = fmtword[t + ((ecclevel - 1) << 3)];\r\n        // low byte\r\n        for (k = 0; k < 8; k++, y >>= 1)\r\n            if (y & 1) {\r\n                qrframe[(width - 1 - k) + width * 8] = 1;\r\n                if (k < 6)\r\n                    qrframe[8 + width * k] = 1;\r\n                else\r\n                    qrframe[8 + width * (k + 1)] = 1;\r\n            }\r\n            // high byte\r\n        for (k = 0; k < 7; k++, y >>= 1)\r\n            if (y & 1) {\r\n                qrframe[8 + width * (width - 7 + k)] = 1;\r\n                if (k)\r\n                    qrframe[(6 - k) + width * 8] = 1;\r\n                else\r\n                    qrframe[7 + width * 8] = 1;\r\n            }\r\n\r\n            // return image\r\n        return qrframe;\r\n    }\r\n\r\n    var _canvas = null,\r\n        _size = null;\r\n\r\n    var api = {\r\n\r\n        get ecclevel() {\r\n            return ecclevel;\r\n        },\r\n\r\n        set ecclevel(val) {\r\n            ecclevel = val;\r\n        },\r\n\r\n        get size() {\r\n            return _size;\r\n        },\r\n\r\n        set size(val) {\r\n            _size = val\r\n        },\r\n\r\n        get canvas() {\r\n            return _canvas;\r\n        },\r\n\r\n        set canvas(el) {\r\n            _canvas = el;\r\n        },\r\n\r\n        getFrame: function(string) {\r\n            return genframe(string);\r\n        },\r\n\r\n        draw: function(string, canvas, size, ecc) {\r\n\r\n            ecclevel = ecc || ecclevel;\r\n            canvas = canvas || _canvas;\r\n\r\n            if (!canvas) {\r\n                console.warn('No canvas provided to draw QR code in!')\r\n                return;\r\n            }\r\n\r\n            size = size || _size || Math.min(canvas.width, canvas.height);\r\n\r\n            var frame = genframe(string),\r\n                ctx = canvas.ctx,\r\n                px = Math.round(size / (width + 8));\r\n\r\n            var roundedSize = px * (width + 8),\r\n                offset = Math.floor((size - roundedSize) / 2);\r\n\r\n            size = roundedSize;\r\n\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n            ctx.setFillStyle('#000000');\r\n\r\n            for (var i = 0; i < width; i++) {\r\n                for (var j = 0; j < width; j++) {\r\n                    if (frame[j * width + i]) {\r\n                        ctx.fillRect(px * (4 + i) + offset, px * (4 + j) + offset, px, px);\r\n                    }\r\n                }\r\n            }\r\n            ctx.draw();\r\n        }\r\n    }\r\n\r\n    module.exports = {\r\n        api: api\r\n    }\r\n\r\n})()"],"sourceRoot":""}